@model EKM_Project.Models.Cake
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}


<div class="AdminPage">
    <div class="navBar">
        <h2 class="logoText">Administration</h2>
        @Html.ActionLink("Return to Front-end", "Index", "Home", new { }, new { @class = "btn btn-default returnBtn" })

    </div>

    <div class="sideBarCont">
        <div class="sidebar">
            <ul class="nav nav-pills nav-stacked">
                <li role="presentation" class="active">@Html.ActionLink("Cakes", "Index")</li>
                <li role="presentation">@Html.ActionLink("Customers", "Index", "Customer")</li>
                <li role="presentation">@Html.ActionLink("Orders", "Index", "Order")</li>
            </ul>
        </div>
            <div class="content">

                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h3 class="panel-title">Add a Cake</h3>
                    </div>
                    <div class="panel-body">
                        @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {

                            <div class="form-horizontal">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                <div class="form-group">
                                    @Html.LabelFor(model => model.CakeName, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.CakeName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.CakeName, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.CakeDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.CakeDescription, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.CakeDescription, "", new { @class = "text-danger" })
                                    </div>
                                </div>
        
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.Label("Image", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        <input accept=".jpg, .png" name="UploadedImage" type="file"/>                                       
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Add" class="btn btn-primary" />
                                        @Html.ActionLink("Back to List", "Index", "Admin", new { }, new { @class = "btn btn-default" })

                                    </div>
                                </div>
                                

                            </div>
                        }
                    </div>
                </div>
            </div>
    </div>
</div>